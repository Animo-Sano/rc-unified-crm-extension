{
  "service": {
    "service": "rc-unified-crm-extension",
    "serviceObject": {
      "name": "rc-unified-crm-extension"
    },
    "provider": {
      "stage": "prod",
      "name": "aws",
      "runtime": "nodejs14.x",
      "region": "us-east-1",
      "memorySize": 256,
      "timeout": 30,
      "environment": {
        "APP_SERVER": "https://unified-crm-extension.labs.ringcentral.com",
        "APP_SERVER_SECRET_KEY": "rcDaKingKong",
        "PIPEDRIVE_CLIENT_ID": "5d4736e322561f57",
        "PIPEDRIVE_CLIENT_SECRET": "f5ea805cd71948bde6226baa057b318382bab2d1",
        "PIPEDRIVE_ACCESS_TOKEN_URI": "https://oauth.pipedrive.com/oauth/token",
        "PIPEDRIVE_REDIRECT_URI": "https://unified-crm-extension.labs.ringcentral.com/pipedrive-redirect",
        "CLIO_CLIENT_ID": "JxK4GglGRoZnWoKA4sSLoXa5PHA2E6Mjisv3iIMY",
        "CLIO_CLIENT_SECRET": "cfjkNuRnaakHsLDPVVqe9ioJLg7m4IElmKxRTwcY",
        "CLIO_ACCESS_TOKEN_URI": "https://app.clio.com/oauth/token",
        "CLIO_REDIRECT_URI": "https://ringcentral.github.io/ringcentral-embeddable/redirect.html",
        "SEGMENT_KEY": "z5fFnp9l5cZQLJJFE97vYi9bRloLAEVd",
        "HASH_KEY": "adasdawqsadaaasa...",
        "DATABASE_URL": "postgresql://dakong:rclabsdakong@unified-crm-extension.proxy-czwillulczws.us-east-1.rds.amazonaws.com/postgres",
        "RINGCENTRAL_DATABASE_USERNAME": "dakong",
        "RINGCENTRAL_DATABASE_PASSWORD": "rclabsdakong",
        "REDTAIL_API_KEY": "da0fd558-e03a-456e-8e9e-e955ff7ee11f",
        "REDTAIL_API_SERVER": "https://smf.crm3.redtailtechnology.com/api/public/v1",
        "INSIGHTLY_API_VERSION": "v3.1",
        "BULLHORN_CLIENT_ID": "5a1ff851-6b1c-454d-8501-826502e6fc76",
        "BULLHORN_CLIENT_SECRET": "a1nn6zJznAdOLs1kjbRCcJXU",
        "BULLHORN_REDIRECT_URI": "https://ringcentral.github.io/ringcentral-embeddable/redirect.html"
      },
      "tags": {
        "Department": "dev",
        "Owner": "dakong",
        "Stage": "production",
        "Environment": "rc-unified-crm-extension",
        "Team": "int-xmn",
        "Name": "rc-unified-crm-extension"
      },
      "vpc": {
        "securityGroupIds": [
          {
            "Ref": "LambdaSecurityGroup"
          }
        ],
        "subnetIds": [
          {
            "Ref": "PrivateSubnet1"
          },
          {
            "Ref": "PrivateSubnet2"
          },
          {
            "Ref": "PrivateSubnet3"
          }
        ]
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "AppLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/rc-unified-crm-extension-prod-app",
              "RetentionInDays": 180
            }
          },
          "DbAccessorLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/rc-unified-crm-extension-prod-dbAccessor",
              "RetentionInDays": 180
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "rc-unified-crm-extension",
                        "prod",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/rc-unified-crm-extension-prod*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/rc-unified-crm-extension-prod*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "rc-unified-crm-extension",
                    "prod",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                    ]
                  ]
                }
              ]
            }
          },
          "AppLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/rc-unified-crm-extension/prod/1714054811659-2024-04-25T14:20:11.659Z/rc-unified-crm-extension.zip"
              },
              "Handler": "lambda.app",
              "Runtime": "nodejs14.x",
              "FunctionName": "rc-unified-crm-extension-prod-app",
              "MemorySize": 256,
              "Timeout": 30,
              "Tags": [
                {
                  "Key": "Department",
                  "Value": "dev"
                },
                {
                  "Key": "Owner",
                  "Value": "dakong"
                },
                {
                  "Key": "Stage",
                  "Value": "production"
                },
                {
                  "Key": "Environment",
                  "Value": "rc-unified-crm-extension"
                },
                {
                  "Key": "Team",
                  "Value": "int-xmn"
                },
                {
                  "Key": "Name",
                  "Value": "rc-unified-crm-extension"
                }
              ],
              "Environment": {
                "Variables": {
                  "APP_SERVER": "https://unified-crm-extension.labs.ringcentral.com",
                  "APP_SERVER_SECRET_KEY": "rcDaKingKong",
                  "PIPEDRIVE_CLIENT_ID": "5d4736e322561f57",
                  "PIPEDRIVE_CLIENT_SECRET": "f5ea805cd71948bde6226baa057b318382bab2d1",
                  "PIPEDRIVE_ACCESS_TOKEN_URI": "https://oauth.pipedrive.com/oauth/token",
                  "PIPEDRIVE_REDIRECT_URI": "https://unified-crm-extension.labs.ringcentral.com/pipedrive-redirect",
                  "CLIO_CLIENT_ID": "JxK4GglGRoZnWoKA4sSLoXa5PHA2E6Mjisv3iIMY",
                  "CLIO_CLIENT_SECRET": "cfjkNuRnaakHsLDPVVqe9ioJLg7m4IElmKxRTwcY",
                  "CLIO_ACCESS_TOKEN_URI": "https://app.clio.com/oauth/token",
                  "CLIO_REDIRECT_URI": "https://ringcentral.github.io/ringcentral-embeddable/redirect.html",
                  "SEGMENT_KEY": "z5fFnp9l5cZQLJJFE97vYi9bRloLAEVd",
                  "HASH_KEY": "adasdawqsadaaasa...",
                  "DATABASE_URL": "postgresql://dakong:rclabsdakong@unified-crm-extension.proxy-czwillulczws.us-east-1.rds.amazonaws.com/postgres",
                  "RINGCENTRAL_DATABASE_USERNAME": "dakong",
                  "RINGCENTRAL_DATABASE_PASSWORD": "rclabsdakong",
                  "REDTAIL_API_KEY": "da0fd558-e03a-456e-8e9e-e955ff7ee11f",
                  "REDTAIL_API_SERVER": "https://smf.crm3.redtailtechnology.com/api/public/v1",
                  "INSIGHTLY_API_VERSION": "v3.1",
                  "BULLHORN_CLIENT_ID": "5a1ff851-6b1c-454d-8501-826502e6fc76",
                  "BULLHORN_CLIENT_SECRET": "a1nn6zJznAdOLs1kjbRCcJXU",
                  "BULLHORN_REDIRECT_URI": "https://ringcentral.github.io/ringcentral-embeddable/redirect.html"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "AppLogGroup"
            ]
          },
          "DbAccessorLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/rc-unified-crm-extension/prod/1714054811659-2024-04-25T14:20:11.659Z/rc-unified-crm-extension.zip"
              },
              "Handler": "dbAccessor.app",
              "Runtime": "nodejs14.x",
              "FunctionName": "rc-unified-crm-extension-prod-dbAccessor",
              "MemorySize": 256,
              "Timeout": 30,
              "Tags": [
                {
                  "Key": "Department",
                  "Value": "dev"
                },
                {
                  "Key": "Owner",
                  "Value": "dakong"
                },
                {
                  "Key": "Stage",
                  "Value": "production"
                },
                {
                  "Key": "Environment",
                  "Value": "rc-unified-crm-extension"
                },
                {
                  "Key": "Team",
                  "Value": "int-xmn"
                },
                {
                  "Key": "Name",
                  "Value": "rc-unified-crm-extension"
                }
              ],
              "Environment": {
                "Variables": {
                  "APP_SERVER": "https://unified-crm-extension.labs.ringcentral.com",
                  "APP_SERVER_SECRET_KEY": "rcDaKingKong",
                  "PIPEDRIVE_CLIENT_ID": "5d4736e322561f57",
                  "PIPEDRIVE_CLIENT_SECRET": "f5ea805cd71948bde6226baa057b318382bab2d1",
                  "PIPEDRIVE_ACCESS_TOKEN_URI": "https://oauth.pipedrive.com/oauth/token",
                  "PIPEDRIVE_REDIRECT_URI": "https://unified-crm-extension.labs.ringcentral.com/pipedrive-redirect",
                  "CLIO_CLIENT_ID": "JxK4GglGRoZnWoKA4sSLoXa5PHA2E6Mjisv3iIMY",
                  "CLIO_CLIENT_SECRET": "cfjkNuRnaakHsLDPVVqe9ioJLg7m4IElmKxRTwcY",
                  "CLIO_ACCESS_TOKEN_URI": "https://app.clio.com/oauth/token",
                  "CLIO_REDIRECT_URI": "https://ringcentral.github.io/ringcentral-embeddable/redirect.html",
                  "SEGMENT_KEY": "z5fFnp9l5cZQLJJFE97vYi9bRloLAEVd",
                  "HASH_KEY": "adasdawqsadaaasa...",
                  "DATABASE_URL": "postgresql://dakong:rclabsdakong@unified-crm-extension.proxy-czwillulczws.us-east-1.rds.amazonaws.com/postgres",
                  "RINGCENTRAL_DATABASE_USERNAME": "dakong",
                  "RINGCENTRAL_DATABASE_PASSWORD": "rclabsdakong",
                  "REDTAIL_API_KEY": "da0fd558-e03a-456e-8e9e-e955ff7ee11f",
                  "REDTAIL_API_SERVER": "https://smf.crm3.redtailtechnology.com/api/public/v1",
                  "INSIGHTLY_API_VERSION": "v3.1",
                  "BULLHORN_CLIENT_ID": "5a1ff851-6b1c-454d-8501-826502e6fc76",
                  "BULLHORN_CLIENT_SECRET": "a1nn6zJznAdOLs1kjbRCcJXU",
                  "BULLHORN_REDIRECT_URI": "https://ringcentral.github.io/ringcentral-embeddable/redirect.html"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "DbAccessorLogGroup"
            ]
          },
          "AppLambdaVersionCpaka9FYUl0JXBPXPhW7PigeYfiKsx9o6N7W20hUhA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AppLambdaFunction"
              },
              "CodeSha256": "g2scYSSSvRYBMIhqI2BS8oBfn4nyON8cw4yeJsC1sao="
            }
          },
          "DbAccessorLambdaVersionJ1XeCwoF95PN7GMcKGRGRL9BfI7H2XzHxJ5vwnSuIY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DbAccessorLambdaFunction"
              },
              "CodeSha256": "g2scYSSSvRYBMIhqI2BS8oBfn4nyON8cw4yeJsC1sao="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "prod-rc-unified-crm-extension",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceProxyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "{proxy+}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodProxyVarAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProxyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AppLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "AppLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1714054803973": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "prod"
            },
            "DependsOn": [
              "ApiGatewayMethodProxyVarAny"
            ]
          },
          "AppLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AppLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "Vpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
              "CidrBlock": "10.0.0.0/16"
            }
          },
          "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
              "AvailabilityZone": "us-east-1a",
              "CidrBlock": "10.0.1.0/24",
              "VpcId": {
                "Ref": "Vpc"
              }
            }
          },
          "PrivateSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
              "AvailabilityZone": "us-east-1b",
              "CidrBlock": "10.0.2.0/24",
              "VpcId": {
                "Ref": "Vpc"
              }
            }
          },
          "PrivateSubnet3": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
              "AvailabilityZone": "us-east-1c",
              "CidrBlock": "10.0.3.0/24",
              "VpcId": {
                "Ref": "Vpc"
              }
            }
          },
          "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
              "AvailabilityZone": "us-east-1d",
              "CidrBlock": "10.0.21.0/24",
              "VpcId": {
                "Ref": "Vpc"
              }
            }
          },
          "LambdaSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
              "GroupName": "rc-unified-crm-extension-prod-lambda",
              "GroupDescription": "Allow all outbound traffic, no inbound",
              "SecurityGroupIngress": [
                {
                  "IpProtocol": -1,
                  "CidrIp": "127.0.0.1/32"
                }
              ],
              "VpcId": {
                "Ref": "Vpc"
              }
            }
          },
          "DbSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
              "GroupName": "rc-unified-crm-extension-prod-db",
              "GroupDescription": "Allow local inbound to port 5432, no outbound",
              "SecurityGroupIngress": [
                {
                  "CidrIp": "10.0.0.0/16",
                  "IpProtocol": "tcp",
                  "FromPort": 5432,
                  "ToPort": 5432
                }
              ],
              "SecurityGroupEgress": [
                {
                  "IpProtocol": -1,
                  "CidrIp": "127.0.0.1/32"
                }
              ],
              "VpcId": {
                "Ref": "Vpc"
              }
            }
          },
          "DbSubnetGroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
              "DBSubnetGroupName": "rc-unified-crm-extension-prod",
              "DBSubnetGroupDescription": "Private database subnet group",
              "SubnetIds": [
                {
                  "Ref": "PrivateSubnet1"
                },
                {
                  "Ref": "PrivateSubnet2"
                },
                {
                  "Ref": "PrivateSubnet3"
                }
              ]
            }
          },
          "Database": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
              "DBInstanceIdentifier": "rc-unified-crm-extension-prod",
              "Engine": "postgres",
              "AllocatedStorage": 20,
              "EngineVersion": 11.14,
              "DBInstanceClass": "db.t3.micro",
              "MasterUsername": "dakong",
              "MasterUserPassword": "rclabsdakong",
              "DBSubnetGroupName": {
                "Ref": "DbSubnetGroup"
              },
              "VPCSecurityGroups": [
                {
                  "Ref": "DbSecurityGroup"
                }
              ]
            }
          },
          "Eip": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
              "Domain": "vpc"
            }
          },
          "NatGateway": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
              "AllocationId": {
                "Fn::GetAtt": [
                  "Eip",
                  "AllocationId"
                ]
              },
              "SubnetId": {
                "Ref": "PublicSubnet1"
              }
            }
          },
          "PrivateRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
              "VpcId": {
                "Ref": "Vpc"
              }
            }
          },
          "PrivateRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
              "RouteTableId": {
                "Ref": "PrivateRouteTable"
              },
              "DestinationCidrBlock": "0.0.0.0/0",
              "NatGatewayId": {
                "Ref": "NatGateway"
              }
            }
          },
          "SubnetRouteTableAssociationPrivate1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
              "SubnetId": {
                "Ref": "PrivateSubnet1"
              },
              "RouteTableId": {
                "Ref": "PrivateRouteTable"
              }
            }
          },
          "SubnetRouteTableAssociationPrivate2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
              "SubnetId": {
                "Ref": "PrivateSubnet2"
              },
              "RouteTableId": {
                "Ref": "PrivateRouteTable"
              }
            }
          },
          "SubnetRouteTableAssociationPrivate3": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
              "SubnetId": {
                "Ref": "PrivateSubnet3"
              },
              "RouteTableId": {
                "Ref": "PrivateRouteTable"
              }
            }
          },
          "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway"
          },
          "VPCGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
              "VpcId": {
                "Ref": "Vpc"
              },
              "InternetGatewayId": {
                "Ref": "InternetGateway"
              }
            }
          },
          "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
              "VpcId": {
                "Ref": "Vpc"
              }
            }
          },
          "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": [
              "InternetGateway"
            ],
            "Properties": {
              "RouteTableId": {
                "Ref": "PublicRouteTable"
              },
              "DestinationCidrBlock": "0.0.0.0/0",
              "GatewayId": {
                "Ref": "InternetGateway"
              }
            }
          },
          "SubnetRouteTableAssociationPublic1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
              "SubnetId": {
                "Ref": "PublicSubnet1"
              },
              "RouteTableId": {
                "Ref": "PublicRouteTable"
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-rc-unified-crm-extension-prod-ServerlessDeploymentBucketName"
            }
          },
          "AppLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AppLambdaVersionCpaka9FYUl0JXBPXPhW7PigeYfiKsx9o6N7W20hUhA"
            },
            "Export": {
              "Name": "sls-rc-unified-crm-extension-prod-AppLambdaFunctionQualifiedArn"
            }
          },
          "DbAccessorLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DbAccessorLambdaVersionJ1XeCwoF95PN7GMcKGRGRL9BfI7H2XzHxJ5vwnSuIY"
            },
            "Export": {
              "Name": "sls-rc-unified-crm-extension-prod-DbAccessorLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/prod"
                ]
              ]
            },
            "Export": {
              "Name": "sls-rc-unified-crm-extension-prod-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      }
    },
    "custom": {
      "logRetentionInDays": 180
    },
    "plugins": [
      "serverless-plugin-log-retention"
    ],
    "pluginsData": {},
    "functions": {
      "app": {
        "handler": "lambda.app",
        "events": [
          {
            "http": {
              "method": "any",
              "path": "{proxy+}",
              "cors": false,
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "rc-unified-crm-extension-prod-app",
        "package": {},
        "memory": 256,
        "timeout": 30,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "AppLambdaVersionCpaka9FYUl0JXBPXPhW7PigeYfiKsx9o6N7W20hUhA"
      },
      "dbAccessor": {
        "handler": "dbAccessor.app",
        "events": [],
        "name": "rc-unified-crm-extension-prod-dbAccessor",
        "package": {},
        "memory": 256,
        "timeout": 30,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "DbAccessorLambdaVersionJ1XeCwoF95PN7GMcKGRGRL9BfI7H2XzHxJ5vwnSuIY"
      }
    },
    "resources": {
      "Resources": {
        "Vpc": {
          "Type": "AWS::EC2::VPC",
          "Properties": {
            "CidrBlock": "10.0.0.0/16"
          }
        },
        "PrivateSubnet1": {
          "Type": "AWS::EC2::Subnet",
          "Properties": {
            "AvailabilityZone": "us-east-1a",
            "CidrBlock": "10.0.1.0/24",
            "VpcId": {
              "Ref": "Vpc"
            }
          }
        },
        "PrivateSubnet2": {
          "Type": "AWS::EC2::Subnet",
          "Properties": {
            "AvailabilityZone": "us-east-1b",
            "CidrBlock": "10.0.2.0/24",
            "VpcId": {
              "Ref": "Vpc"
            }
          }
        },
        "PrivateSubnet3": {
          "Type": "AWS::EC2::Subnet",
          "Properties": {
            "AvailabilityZone": "us-east-1c",
            "CidrBlock": "10.0.3.0/24",
            "VpcId": {
              "Ref": "Vpc"
            }
          }
        },
        "PublicSubnet1": {
          "Type": "AWS::EC2::Subnet",
          "Properties": {
            "AvailabilityZone": "us-east-1d",
            "CidrBlock": "10.0.21.0/24",
            "VpcId": {
              "Ref": "Vpc"
            }
          }
        },
        "LambdaSecurityGroup": {
          "Type": "AWS::EC2::SecurityGroup",
          "Properties": {
            "GroupName": "rc-unified-crm-extension-prod-lambda",
            "GroupDescription": "Allow all outbound traffic, no inbound",
            "SecurityGroupIngress": [
              {
                "IpProtocol": -1,
                "CidrIp": "127.0.0.1/32"
              }
            ],
            "VpcId": {
              "Ref": "Vpc"
            }
          }
        },
        "DbSecurityGroup": {
          "Type": "AWS::EC2::SecurityGroup",
          "Properties": {
            "GroupName": "rc-unified-crm-extension-prod-db",
            "GroupDescription": "Allow local inbound to port 5432, no outbound",
            "SecurityGroupIngress": [
              {
                "CidrIp": "10.0.0.0/16",
                "IpProtocol": "tcp",
                "FromPort": 5432,
                "ToPort": 5432
              }
            ],
            "SecurityGroupEgress": [
              {
                "IpProtocol": -1,
                "CidrIp": "127.0.0.1/32"
              }
            ],
            "VpcId": {
              "Ref": "Vpc"
            }
          }
        },
        "DbSubnetGroup": {
          "Type": "AWS::RDS::DBSubnetGroup",
          "Properties": {
            "DBSubnetGroupName": "rc-unified-crm-extension-prod",
            "DBSubnetGroupDescription": "Private database subnet group",
            "SubnetIds": [
              {
                "Ref": "PrivateSubnet1"
              },
              {
                "Ref": "PrivateSubnet2"
              },
              {
                "Ref": "PrivateSubnet3"
              }
            ]
          }
        },
        "Database": {
          "Type": "AWS::RDS::DBInstance",
          "Properties": {
            "DBInstanceIdentifier": "rc-unified-crm-extension-prod",
            "Engine": "postgres",
            "AllocatedStorage": 20,
            "EngineVersion": 11.14,
            "DBInstanceClass": "db.t3.micro",
            "MasterUsername": "dakong",
            "MasterUserPassword": "rclabsdakong",
            "DBSubnetGroupName": {
              "Ref": "DbSubnetGroup"
            },
            "VPCSecurityGroups": [
              {
                "Ref": "DbSecurityGroup"
              }
            ]
          }
        },
        "Eip": {
          "Type": "AWS::EC2::EIP",
          "Properties": {
            "Domain": "vpc"
          }
        },
        "NatGateway": {
          "Type": "AWS::EC2::NatGateway",
          "Properties": {
            "AllocationId": {
              "Fn::GetAtt": [
                "Eip",
                "AllocationId"
              ]
            },
            "SubnetId": {
              "Ref": "PublicSubnet1"
            }
          }
        },
        "PrivateRouteTable": {
          "Type": "AWS::EC2::RouteTable",
          "Properties": {
            "VpcId": {
              "Ref": "Vpc"
            }
          }
        },
        "PrivateRoute": {
          "Type": "AWS::EC2::Route",
          "Properties": {
            "RouteTableId": {
              "Ref": "PrivateRouteTable"
            },
            "DestinationCidrBlock": "0.0.0.0/0",
            "NatGatewayId": {
              "Ref": "NatGateway"
            }
          }
        },
        "SubnetRouteTableAssociationPrivate1": {
          "Type": "AWS::EC2::SubnetRouteTableAssociation",
          "Properties": {
            "SubnetId": {
              "Ref": "PrivateSubnet1"
            },
            "RouteTableId": {
              "Ref": "PrivateRouteTable"
            }
          }
        },
        "SubnetRouteTableAssociationPrivate2": {
          "Type": "AWS::EC2::SubnetRouteTableAssociation",
          "Properties": {
            "SubnetId": {
              "Ref": "PrivateSubnet2"
            },
            "RouteTableId": {
              "Ref": "PrivateRouteTable"
            }
          }
        },
        "SubnetRouteTableAssociationPrivate3": {
          "Type": "AWS::EC2::SubnetRouteTableAssociation",
          "Properties": {
            "SubnetId": {
              "Ref": "PrivateSubnet3"
            },
            "RouteTableId": {
              "Ref": "PrivateRouteTable"
            }
          }
        },
        "InternetGateway": {
          "Type": "AWS::EC2::InternetGateway"
        },
        "VPCGatewayAttachment": {
          "Type": "AWS::EC2::VPCGatewayAttachment",
          "Properties": {
            "VpcId": {
              "Ref": "Vpc"
            },
            "InternetGatewayId": {
              "Ref": "InternetGateway"
            }
          }
        },
        "PublicRouteTable": {
          "Type": "AWS::EC2::RouteTable",
          "Properties": {
            "VpcId": {
              "Ref": "Vpc"
            }
          }
        },
        "PublicRoute": {
          "Type": "AWS::EC2::Route",
          "DependsOn": [
            "InternetGateway"
          ],
          "Properties": {
            "RouteTableId": {
              "Ref": "PublicRouteTable"
            },
            "DestinationCidrBlock": "0.0.0.0/0",
            "GatewayId": {
              "Ref": "InternetGateway"
            }
          }
        },
        "SubnetRouteTableAssociationPublic1": {
          "Type": "AWS::EC2::SubnetRouteTableAssociation",
          "Properties": {
            "SubnetId": {
              "Ref": "PublicSubnet1"
            },
            "RouteTableId": {
              "Ref": "PublicRouteTable"
            }
          }
        },
        "AppLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "RetentionInDays": 180
          }
        },
        "DbAccessorLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "RetentionInDays": 180
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "rc-unified-crm-extension",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "excludeDevDependencies": true,
        "patterns": [
          ".json",
          ".js",
          "node_modules/**"
        ],
        "artifactsS3KeyDirname": "serverless/rc-unified-crm-extension/prod/code-artifacts",
        "artifact": "C:\\Users\\da.kong\\Documents\\Github\\rc-unified-crm-extension\\server\\serverless-deploy\\.serverless\\rc-unified-crm-extension.zip",
        "artifactDirectoryName": "serverless/rc-unified-crm-extension/prod/1714054811659-2024-04-25T14:20:11.659Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "C:\\Users\\da.kong\\Documents\\Github\\rc-unified-crm-extension\\server\\serverless-deploy\\.serverless\\rc-unified-crm-extension.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/rc-unified-crm-extension/prod/1714054811659-2024-04-25T14:20:11.659Z",
    "artifact": "rc-unified-crm-extension.zip"
  }
}